[
  {
    "title": "Tutorial Intro",
    "content": "<h1>Tutorial Intro</h1>\n<p>Let's discover <strong>Docusaurus in less than 5 minutes</strong>.</p>\n<p>import Cat from '/img/cat.png';</p>\n<p><img src={Cat} alt=\"Siamese cat\" style={{width: 400}} /></p>\n<p><img alt=\"Cat\" src=\"/img/cat.png\" /></p>\n<h2>Getting Started</h2>\n<p>Get started by <strong>creating a new site</strong>.</p>\n<p>Or <strong>try Docusaurus immediately</strong> with <strong><a href=\"https://docusaurus.new\">docusaurus.new</a></strong>.</p>\n<h2>Generate a new site</h2>\n<p>Generate a new Docusaurus site using the <strong>classic template</strong>:</p>\n<p><code>shell\nnpm init docusaurus@latest my-website classic</code></p>\n<h2>Start your site</h2>\n<p>Run the development server:</p>\n<p>```shell\ncd my-website</p>\n<p>npx docusaurus start\n```</p>\n<p>Your site starts at <code>http://localhost:3000</code>.</p>\n<p>Open <code>docs/intro.md</code> and edit some lines: the site <strong>reloads automatically</strong> and displays your changes.</p>",
    "url": "/docs/intro"
  },
  {
    "title": "Technical Communication Tasks",
    "content": "<h1>Technical Communication Tasks</h1>\n<p>The Technical Communication team maintains two main documentation sites: the <a href=\"https://docs.cleverbridge.com/public/all/home.htm\">business user\ndocumentation</a> and the <a href=\"https://dev.cleverbridge.com/\">developer portal</a>. The team also contributes to various other technical communication tasks to support Cleverbridgeâ€™s platforms and tools.</p>\n<p>Cleverbridge provides web-based and desktop tools that enable our clients to achieve a variety of business goals, as well as a rich set of APIs that extend and enhance the capabilities of the e-commerce platform.</p>\n<ul>\n<li>\n<p><a href=\"task-1.md\">Task 1</a></p>\n</li>\n<li>\n<p><a href=\"task-2.md\">Task 2</a></p>\n</li>\n</ul>",
    "url": "/docs/tech-comm/"
  },
  {
    "title": "Task 1",
    "content": "<h1>Task 1</h1>\n<div style={{\n  marginBottom: '1rem',\n  padding: '1rem',\n  backgroundColor: '#f0f8ff',\n  borderLeft: '4px solid #4682b4',\n  borderRadius: '4px',\n}}>\n  <p style={{\n    margin: 0,\n    color: '#333',\n    fontSize: '1rem',\n    lineHeight: 1.5,\n  }}>\n    Create a clear, step-by-step procedure that introduces the reader to a technology you interact with regularly. This could be a tool, software, or system you use in your work or personal life. Assume the reader is an average internet and mobile user with basic familiarity but no advanced expertise in technology, and ensure your procedure is accessible and easy to follow.<br></br><br></br>Specify the time used to complete the task.\n  </p>\n</div>\n\n<h2>Beginner's guide to GraphQL queries in GitHub's GraphiQL Editor</h2>\n<p>GraphQL is a query language for APIs, and GitHub provides a GraphiQL interface to explore and test GraphQL queries. This guide will help you get started with making simple queries for your repository.</p>\n<h3>Step 1: Access GitHub's GraphiQL Editor</h3>\n<ol>\n<li>Go to <a href=\"https://docs.github.com/en/graphql/overview/explorer\">GitHub's GraphQL Explorer</a>.</li>\n<li>If you're not already logged in to GitHub, you'll be prompted to do so.</li>\n<li>\n<p>Once logged in, you'll see the GraphiQL interface: a panel for writing queries on the left, and a panel for viewing results on the right.</p>\n<p><img alt=\"Explorer\" src=\"img/explorer.png\" /></p>\n</li>\n</ol>\n<h3>Step 2: Understand the basic query structure</h3>\n<p>A basic GraphQL query looks like this:</p>\n<p><code>graphql\nquery {\n  viewer {\n    login\n  }\n}</code></p>\n<p>This query asks for the login name of the current user (viewer).</p>\n<h3>Step 3: Run your first query</h3>\n<ol>\n<li>In the left panel of the GraphiQL editor, type the query from Step 2.</li>\n<li>Click the \"Play\" button (a triangle icon) at the top of the editor. Alternatively, you can press <kbd>Ctrl</kbd>+<kbd>Enter</kbd>.</li>\n<li>\n<p>In the right panel, you'll see the result, which should include your GitHub username.</p>\n<p><img alt=\"Response\" src=\"img/response.png\" /></p>\n</li>\n</ol>\n<h3>Step 4: Explore available fields</h3>\n<ol>\n<li>In the GraphiQL interface, look for the \"Docs\" tab on the right side.</li>\n<li>Click on it to open the documentation explorer.</li>\n<li>\n<p>Here, you can browse all available queries and fields.</p>\n<p><img alt=\"Docs Explorer\" src=\"img/docs-explorer.png\" /></p>\n</li>\n<li>\n<p>Try adding more fields to your query, like this:</p>\n<p><code>graphql\nquery {\n  viewer {\n    login\n    name\n    bio\n  }\n}</code></p>\n<p><img alt=\"Response to new query\" src=\"img/response-1.png\" /></p>\n</li>\n</ol>\n<h3>Step 5: Query specific data</h3>\n<p>Let's try a query to fetch information about a specific repository:</p>\n<p><code>graphql\nquery {\n  repository(owner: \"ivancheban\", name: \"docsy-site\") {\n    name\n    description\n    stargazerCount\n  }\n}</code></p>\n<p>This query fetches the name, description, and number of stars for the \"docsy-site\" repository owned by \"ivancheban\".</p>\n<h3>Step 6: Use query variables</h3>\n<p>At the bottom of the GraphiQL editor, you'll see a \"Query Variables\" section.</p>\n<p>You can use this to make your queries more flexible. Let's modify our previous query:</p>\n<p><code>graphql\nquery($owner: String!, $name: String!) {\n  repository(owner: $owner, name: $name) {\n    name\n    description\n    stargazerCount\n  }\n}</code></p>\n<p>In the Query Variables section, add:</p>\n<p><code>json\n{\n  \"owner\": \"ivancheban\",\n  \"name\": \"docsy-site\"\n}</code></p>\n<p><img alt=\"Variables\" src=\"img/variables.png\" /></p>\n<p>Now you can easily change the owner and repository name without modifying the main query.</p>\n<p>Congratulations! ðŸŽ‰ You've now learned the basics of making GraphQL queries using GitHub's GraphiQL editor. Remember, GraphQL is very powerful and flexible - these examples just scratch the surface. As you become more comfortable, try exploring more complex queries and different types of data available through the GitHub API.</p>\n<div style={{\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: '20px',\n  marginBottom: '20px'\n}}>\n  <div style={{\n    fontSize: '64px',\n    marginBottom: '10px'\n  }}>\n    âŒ›\n  </div>\n  <div style={{\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: '#333'\n  }}>\n    2:30\n  </div>\n  <p style={{\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#666',\n    marginTop: '10px'\n  }}>\n    Time spent on this task: 2 hours and 30 minutes\n  </p>\n</div>",
    "url": "/docs/tech-comm/task-1"
  },
  {
    "title": "Task 2",
    "content": "<h1>Task 2</h1>\n<div style={{\n  marginBottom: '1rem',\n  padding: '1rem',\n  backgroundColor: '#f0f8ff',\n  borderLeft: '4px solid #4682b4',\n  borderRadius: '4px',\n}}>\n  <p style={{\n    margin: 0,\n    color: '#333',\n    fontSize: '1rem',\n    lineHeight: 1.5,\n  }}>\n    We are currently transitioning our <a href=\"https://docs.cleverbridge.com/public/all/home.htm\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#4682b4', textDecoration: 'underline' }}>business user documentation</a> to Docusaurus. Your second task is to review the Information Architecture (IA) of the current website and provide feedback on aspects that are working well and areas with room for improvement as we make this transition.\n<br></br><br></br>\n  Specify the time used to complete the task.\n  </p>\n</div>\n\n<h2>Removing the non-working Google Translate banner</h2>\n<p>The business user documentation site is built using MadCap Flare. Each page of this site shows the banner at the top of the page. The banner includes two elements: changelog and Google Translate language selection dropdown.</p>\n<p><img alt=\"Banner\" src=\"img/banner.png\" /></p>\n<p>When you select any of the available languages from the dropdown menu, nothing happens. The site content isn't translated. This may confuse business users who expect the translated content.</p>\n<p><img alt=\"Banner\" src=\"img/dropdown.png\" /></p>\n<p>The root of this issue is in this code of the MadCap Flare Master Page (.flmsp) markup:</p>\n<p>```html</p>\n<div id=\"google_translate_element\">\n  <div class=\"skiptranslate goog-te-gadget\" dir=\"ltr\" style=\"\">\n    <div\n      id=\":0.targetLanguage\"\n      class=\"goog-te-gadget-simple\"\n      style=\"white-space: nowrap;\"\n    >\n      <img\n        src=\"https://www.google.com/images/cleardot.gif\"\n        class=\"goog-te-gadget-icon\"\n        alt=\"\"\n        style='background-image: url(\"https://translate.googleapis.com/translate_static/img/te_ctrl3.gif\"); background-position: -65px 0px;'\n      /><span style=\"vertical-align: middle;\"\n        ><a aria-haspopup=\"true\" class=\"VIpgJd-ZVi9od-xl07Ob-lTBxed\" href=\"#\"\n          ><span>Select Language</span\n          ><img\n            src=\"https://www.google.com/images/cleardot.gif\"\n            alt=\"\"\n            width=\"1\"\n            height=\"1\"\n          /><span style=\"border-left: 1px solid rgb(187, 187, 187);\"\n            >&ZeroWidthSpace;</span\n          ><img\n            src=\"https://www.google.com/images/cleardot.gif\"\n            alt=\"\"\n            width=\"1\"\n            height=\"1\"\n          /><span aria-hidden=\"true\" style=\"color: rgb(118, 118, 118);\"\n            >â–¼</span\n          ></a\n        ></span\n      >\n    </div>\n  </div>\n</div>\n<p>```</p>\n<p><strong>My recommendation:</strong> Either remove this code from the Master Page in MadCap Flare, or fix the issue with Google Translate API that prevents the content translation.</p>\n<h2>Changing the site font</h2>\n<p>The business user documentation site uses the Mazzard H font. While looking funny and grotesque, this font doesn't suit the purpose of the site. It makes users guess and strain their eyes. For example, the issue with dots above the \"i\" letter. It's difficult to tell the difference between \"i\" and \"l\" letters.</p>\n<p><img alt=\"Font\" src=\"img/font.png\" /></p>\n<p><strong>My recommendation:</strong> Change to some more readable font, for example, <a href=\"https://fonts.adobe.com/fonts/proxima-nova\">Proxima Nova</a>.</p>\n<p><img alt=\"Proxima Nova font\" src=\"img/proxima-nova.png\" /></p>\n<h2>Improving the site information architecture</h2>\n<p>import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';</p>\n<p><Tabs>\n  <TabItem value=\"positive\" label=\"Positive Aspects\" default>\n    <ol>\n      <li>\n        <strong>Clear categories</strong>: The main categories are clear and cover different areas of the platform. This makes it easier for users to find information. Each category (for example, Getting Started, Platform Guides, Developer Documentation) covers a specific part of the documentation.\n      </li>\n      <li>\n        <strong>Visual aids</strong>: Icons for each category help users quickly identify different sections. These visual clues make it easier for users to recognize content types.\n      </li>\n      <li>\n        <strong>Wide coverage</strong>: The navigation includes both user guides (for example, Platform Guides, Commerce Assistant Help) and technical documentation (for example, Developer Documentation, API Reference). This helps different types of users, from business users to developers, find the information they need.\n      </li>\n      <li>\n        <strong>Tool-specific sections</strong>: Dedicated sections for Commerce Assistant, Business Intelligence, and Subscription Commerce Manager help users find tool-specific information quickly.\n      </li>\n      <li>\n        <strong>User-centric organization</strong>: The structure seems to follow a user's journey, starting with \"Getting Started\" and moving to more specific guides and tools.\n      </li>\n      <li>\n        <strong>Logical grouping</strong>: Related items are put together, like Commerce Assistant Help and Business Intelligence Help. This helps users find related information easily and understand how different parts of the platform connect.\n      </li>\n      <li>\n        <strong>Quick start option</strong>: The \"Getting Started\" section is easy to find, which helps new users. This allows new users to quickly find basic information without being overwhelmed by advanced topics.\n      </li>\n    </ol>\n  </TabItem>\n  <TabItem value=\"improvement\" label=\"Areas for Improvement\">\n    <ol>\n      <li>\n        <strong>Better organization</strong>: Think about reorganizing the categories to make them clearer. For example, put user guides and developer documentation in separate groups. This can help users find what they need more easily based on their role.\n      </li>\n      <li>\n        <strong>Consistent naming</strong>: Make sure names are consistent. For example, \"Platform Guides\" and \"Commerce Assistant Help\" could have more similar names. This helps users predict where to find certain types of information.\n      </li>\n      <li>\n        <strong>Incomplete sections</strong>: Items marked with âœ± suggest incomplete or special sections. Ensure all sections look the same as it looks awkward in the navigation.\n      </li>\n      <li>\n        <strong>Unclear prioritization</strong>: It's not immediately clear which items are most important or frequently used. Consider highlighting key or popular topics.\n      </li>\n      <li>\n        <strong>Potential overlap</strong>: There might be overlap between sections like \"Platform Guides\" and specific tool helps. Ensure clear distinctions or cross-referencing between these areas.\n      </li>\n      <li>\n        <strong>Naming consistency</strong>: Some section names are action-oriented (for example, \"Manage Users\") while others are noun-based (for example, \"User Interface\"). Aim for more consistent naming across sections.\n      </li>\n      <li>\n        <strong>Room for growth</strong>: As you move to Docusaurus, think about how the current structure will handle new content. Make sure the new structure can easily add new sections without messing up the overall organization.\n      </li>\n      <li>\n        <strong>More internal links</strong>: In the new Docusaurus setup, add more links between related topics in different categories. This helps users find relevant information and understand how different parts of the platform are connected.\n      </li>\n      <li>\n        <strong>Feedback option</strong>: In the new Docusaurus setup, add a way for users to give feedback on the documentation in each section. This can help you keep improving the documentation based on what users need.\n      </li>\n      <li>\n        <strong>Tags</strong>: Implement tags and categories to improve content organization and discoverability.\n      </li>\n    </ol>\n  </TabItem>\n</Tabs></p>\n<div style={{\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: '20px',\n  marginBottom: '20px'\n}}>\n  <div style={{\n    fontSize: '64px',\n    marginBottom: '10px'\n  }}>\n    âŒ›\n  </div>\n  <div style={{\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: '#333'\n  }}>\n    3:30\n  </div>\n  <p style={{\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#666',\n    marginTop: '10px'\n  }}>\n    Time spent on this task: 3 hours and 30 minutes\n  </p>\n</div>",
    "url": "/docs/tech-comm/task-2"
  },
  {
    "title": "Congratulations!",
    "content": "<h1>Congratulations!</h1>\n<p>You have just learned the <strong>basics of Docusaurus</strong> and made some changes to the <strong>initial template</strong>.</p>\n<p>Docusaurus has <strong>much more to offer</strong>!</p>\n<p>Have <strong>5 more minutes</strong>? Take a look at <strong><a href=\"../tutorial-extras/manage-docs-versions.md\">versioning</a></strong> and <strong><a href=\"../tutorial-extras/translate-your-site.md\">i18n</a></strong>.</p>\n<p>Anything <strong>unclear</strong> or <strong>buggy</strong> in this tutorial? <a href=\"https://github.com/facebook/docusaurus/discussions/4610\">Please report it!</a></p>\n<h2>What's next?</h2>\n<ul>\n<li>Read the <a href=\"https://docusaurus.io/\">official documentation</a>.</li>\n<li>Add a custom <a href=\"https://docusaurus.io/docs/styling-layout\">Design and Layout</a></li>\n<li>Add a <a href=\"https://docusaurus.io/docs/search\">search bar</a></li>\n<li>Find inspirations in the <a href=\"https://docusaurus.io/showcase\">Docusaurus showcase</a></li>\n<li>Get involved in the <a href=\"https://docusaurus.io/community/support\">Docusaurus Community</a></li>\n</ul>",
    "url": "/docs/tutorial-basics/congratulations"
  },
  {
    "title": "Create a Blog Post",
    "content": "<h1>Create a Blog Post</h1>\n<p>Docusaurus creates a <strong>page for each blog post</strong>, but also a <strong>blog index page</strong>, a <strong>tag system</strong>, an <strong>RSS</strong> feed...</p>\n<h2>Create your first Post</h2>\n<p>Create a file at <code>blog/2021-02-28-greetings.md</code>:</p>\n<h2>```md title=\"blog/2021-02-28-greetings.md\"</h2>\n<p>slug: greetings\ntitle: Greetings!\nauthors:\n  - name: Joel Marcey\n    title: Co-creator of Docusaurus 1\n    url: https://github.com/JoelMarcey\n    image_url: https://github.com/JoelMarcey.png\n  - name: SÃ©bastien Lorber\n    title: Docusaurus maintainer\n    url: https://sebastienlorber.com\n    image_url: https://github.com/slorber.png\ntags: [greetings]</p>\n<hr />\n<p>Congratulations, you have made your first post!</p>\n<p>Feel free to play around and edit this post as much you like.\n```</p>\n<p>A new blog post is now available at <code>http://localhost:3000/blog/greetings</code>.</p>",
    "url": "/docs/tutorial-basics/create-a-blog-post"
  },
  {
    "title": "Create a Document",
    "content": "<h1>Create a Document</h1>\n<p>Documents are <strong>groups of pages</strong> connected through:</p>\n<ul>\n<li>a <strong>sidebar</strong></li>\n<li><strong>previous/next navigation</strong></li>\n<li><strong>versioning</strong></li>\n</ul>\n<h2>Create your first Doc</h2>\n<p>Create a markdown file at <code>docs/hello.md</code>:</p>\n<p>```md title=\"docs/hello.md\"</p>\n<h1>Hello</h1>\n<p>This is my <strong>first Docusaurus document</strong>!\n```</p>\n<p>A new document is now available at <code>http://localhost:3000/docs/hello</code>.</p>\n<h2>Configure the Sidebar</h2>\n<p>Docusaurus automatically <strong>creates a sidebar</strong> from the <code>docs</code> folder.</p>\n<p>Add metadata to customize the sidebar label and position:</p>\n<h2>```md title=\"docs/hello.md\" {1-4}</h2>\n<p>sidebar_label: 'Hi!'\nsidebar_position: 3</p>\n<hr />\n<h1>Hello</h1>\n<p>This is my <strong>first Docusaurus document</strong>!\n```</p>\n<p>It is also possible to create your sidebar explicitly in <code>sidebars.js</code>:</p>\n<p><code>diff title=\"sidebars.js\"\nmodule.exports = {\n  tutorialSidebar: [\n    {\n      type: 'category',\n      label: 'Tutorial',\n-     items: [...],\n+     items: ['hello'],\n    },\n  ],\n};</code></p>",
    "url": "/docs/tutorial-basics/create-a-document"
  },
  {
    "title": "Create a Page",
    "content": "<h1>Create a Page</h1>\n<p>Add <strong>Markdown or React</strong> files to <code>src/pages</code> to create a <strong>standalone page</strong>:</p>\n<ul>\n<li><code>src/pages/index.js</code> -&gt; <code>localhost:3000/</code></li>\n<li><code>src/pages/foo.md</code> -&gt; <code>localhost:3000/foo</code></li>\n<li><code>src/pages/foo/bar.js</code> -&gt; <code>localhost:3000/foo/bar</code></li>\n</ul>\n<h2>Create your first React Page</h2>\n<p>Create a file at <code>src/pages/my-react-page.js</code>:</p>\n<p>```jsx title=\"src/pages/my-react-page.js\"\nimport React from 'react';\nimport Layout from '@theme/Layout';</p>\n<p>export default function MyReactPage() {\n  return (\n    <Layout>\n      <h1>My React page</h1>\n      <p>This is a React page</p>\n    </Layout>\n  );\n}\n```</p>\n<p>A new page is now available at <code>http://localhost:3000/my-react-page</code>.</p>\n<h2>Create your first Markdown Page</h2>\n<p>Create a file at <code>src/pages/my-markdown-page.md</code>:</p>\n<p>```mdx title=\"src/pages/my-markdown-page.md\"</p>\n<h1>My Markdown page</h1>\n<p>This is a Markdown page\n```</p>\n<p>A new page is now available at <code>http://localhost:3000/my-markdown-page</code>.</p>",
    "url": "/docs/tutorial-basics/create-a-page"
  },
  {
    "title": "Deploy your site",
    "content": "<h1>Deploy your site</h1>\n<p>Docusaurus is a <strong>static-site-generator</strong> (also called <strong><a href=\"https://jamstack.org/\">Jamstack</a></strong>).</p>\n<p>It builds your site as simple <strong>static HTML, JavaScript and CSS files</strong>.</p>\n<h2>Build your site</h2>\n<p>Build your site <strong>for production</strong>:</p>\n<p><code>bash\nnpm run build</code></p>\n<p>The static files are generated in the <code>build</code> folder.</p>\n<h2>Deploy your site</h2>\n<p>Test your production build locally:</p>\n<p><code>bash\nnpm run serve</code></p>\n<p>The <code>build</code> folder is now served at <code>http://localhost:3000/</code>.</p>\n<p>You can now deploy the <code>build</code> folder <strong>almost anywhere</strong> easily, <strong>for free</strong> or very small cost (read the <strong><a href=\"https://docusaurus.io/docs/deployment\">Deployment Guide</a></strong>).</p>",
    "url": "/docs/tutorial-basics/deploy-your-site"
  },
  {
    "title": "Markdown Features",
    "content": "<h1>Markdown Features</h1>\n<p>Docusaurus supports <strong><a href=\"https://daringfireball.net/projects/markdown/syntax\">Markdown</a></strong> and a few <strong>additional features</strong>.</p>\n<h2>Front Matter</h2>\n<p>Markdown documents have metadata at the top called <a href=\"https://jekyllrb.com/docs/front-matter/\">Front Matter</a>:</p>\n<p>```text title=\"my-doc.md\"\n// highlight-start</p>\n<hr />\n<p>id: my-doc-id\ntitle: My document title\ndescription: My document description\nslug: /my-custom-url</p>\n<hr />\n<p>// highlight-end</p>\n<h2>Markdown heading</h2>\n<p>Markdown text with <a href=\"./hello.md\">links</a>\n```</p>\n<h2>Links</h2>\n<p>Regular Markdown links are supported, using url paths or relative file paths.</p>\n<p><code>md\nLet's see how to [Create a page](/create-a-page).</code></p>\n<p><code>md\nLet's see how to [Create a page](./create-a-page.md).</code></p>\n<p><strong>Result:</strong> Let's see how to <a href=\"./create-a-page.md\">Create a page</a>.</p>\n<h2>Images</h2>\n<p>Regular Markdown images are supported.</p>\n<p>Add an image at <code>static/img/docusaurus.png</code> and display it in Markdown:</p>\n<p><code>md\n![Docusaurus logo](/img/docusaurus.png)</code></p>\n<p><img alt=\"Docusaurus logo\" src=\"/img/docusaurus.png\" /></p>\n<h2>Code Blocks</h2>\n<p>Markdown code blocks are supported with Syntax highlighting.</p>\n<pre><code>```jsx title=\"src/components/HelloDocusaurus.js\"\nfunction HelloDocusaurus() {\n    return (\n        &lt;h1&gt;Hello, Docusaurus!&lt;/h1&gt;\n    )\n}\n```\n</code></pre>\n<p><code>jsx title=\"src/components/HelloDocusaurus.js\"\nfunction HelloDocusaurus() {\n  return &lt;h1&gt;Hello, Docusaurus!&lt;/h1&gt;;\n}</code></p>\n<h2>Admonitions</h2>\n<p>Docusaurus has a special syntax to create admonitions and callouts:</p>\n<pre><code>:::tip My tip\n\nUse this awesome feature option\n\n:::\n\n:::danger Take care\n\nThis action is dangerous\n\n:::\n</code></pre>\n<p>:::tip My tip</p>\n<p>Use this awesome feature option</p>\n<p>:::</p>\n<p>:::danger Take care</p>\n<p>This action is dangerous</p>\n<p>:::</p>\n<h2>MDX and React Components</h2>\n<p><a href=\"https://mdxjs.com/\">MDX</a> can make your documentation more <strong>interactive</strong> and allows using any <strong>React components inside Markdown</strong>:</p>\n<p><code>``jsx\nexport const Highlight = ({children, color}) =&gt; (\n  &lt;span\n    style={{\n      backgroundColor: color,\n      borderRadius: '20px',\n      color: '#fff',\n      padding: '10px',\n      cursor: 'pointer',\n    }}\n    onClick={() =&gt; {\n      alert(</code>You clicked the color ${color} with label ${children}`)\n    }}&gt;\n    {children}\n  </span>\n);</p>\n<p>This is <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> !</p>\n<p>This is <Highlight color=\"#1877F2\">Facebook blue</Highlight> !\n```</p>\n<p>export const Highlight = ({children, color}) =&gt; (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '20px',\n      color: '#fff',\n      padding: '10px',\n      cursor: 'pointer',\n    }}\n    onClick={() => {\n      alert(<code>You clicked the color ${color} with label ${children}</code>);\n    }}&gt;\n    {children}\n  </span>\n);</p>\n<p>This is <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> !</p>\n<p>This is <Highlight color=\"#1877F2\">Facebook blue</Highlight> !</p>",
    "url": "/docs/tutorial-basics/markdown-features"
  },
  {
    "title": "Manage Docs Versions",
    "content": "<h1>Manage Docs Versions</h1>\n<p>Docusaurus can manage multiple versions of your docs.</p>\n<h2>Create a docs version</h2>\n<p>Release a version 1.0 of your project:</p>\n<p><code>bash\nnpm run docusaurus docs:version 1.0</code></p>\n<p>The <code>docs</code> folder is copied into <code>versioned_docs/version-1.0</code> and <code>versions.json</code> is created.</p>\n<p>Your docs now have 2 versions:</p>\n<ul>\n<li><code>1.0</code> at <code>http://localhost:3000/docs/</code> for the version 1.0 docs</li>\n<li><code>current</code> at <code>http://localhost:3000/docs/next/</code> for the <strong>upcoming, unreleased docs</strong></li>\n</ul>\n<h2>Add a Version Dropdown</h2>\n<p>To navigate seamlessly across versions, add a version dropdown.</p>\n<p>Modify the <code>docusaurus.config.js</code> file:</p>\n<p><code>js title=\"docusaurus.config.js\"\nmodule.exports = {\n  themeConfig: {\n    navbar: {\n      items: [\n        // highlight-start\n        {\n          type: 'docsVersionDropdown',\n        },\n        // highlight-end\n      ],\n    },\n  },\n};</code></p>\n<p>The docs version dropdown appears in your navbar:</p>\n<p><img alt=\"Docs Version Dropdown\" src=\"/img/tutorial/docsVersionDropdown.png\" /></p>\n<h2>Update an existing version</h2>\n<p>It is possible to edit versioned docs in their respective folder:</p>\n<ul>\n<li><code>versioned_docs/version-1.0/hello.md</code> updates <code>http://localhost:3000/docs/hello</code></li>\n<li><code>docs/hello.md</code> updates <code>http://localhost:3000/docs/next/hello</code></li>\n</ul>",
    "url": "/docs/tutorial-extras/manage-docs-versions"
  },
  {
    "title": "Translate your site",
    "content": "<h1>Translate your site</h1>\n<p>Let's translate <code>docs/intro.md</code> to French.</p>\n<h2>Configure i18n</h2>\n<p>Modify <code>docusaurus.config.js</code> to add support for the <code>fr</code> locale:</p>\n<p><code>js title=\"docusaurus.config.js\"\nmodule.exports = {\n  i18n: {\n    defaultLocale: 'en',\n    locales: ['en', 'fr'],\n  },\n};</code></p>\n<h2>Translate a doc</h2>\n<p>Copy the <code>docs/intro.md</code> file to the <code>i18n/fr</code> folder:</p>\n<p>```bash\nmkdir -p i18n/fr/docusaurus-plugin-content-docs/current/</p>\n<p>cp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md\n```</p>\n<p>Translate <code>i18n/fr/docusaurus-plugin-content-docs/current/intro.md</code> in French.</p>\n<h2>Start your localized site</h2>\n<p>Start your site on the French locale:</p>\n<p><code>bash\nnpm run start -- --locale fr</code></p>\n<p>Your localized site is accessible at <code>http://localhost:3000/fr/</code> and the <code>Getting Started</code> page is translated.</p>\n<p>:::caution</p>\n<p>In development, you can only use one locale at a same time.</p>\n<p>:::</p>\n<h2>Add a Locale Dropdown</h2>\n<p>To navigate seamlessly across languages, add a locale dropdown.</p>\n<p>Modify the <code>docusaurus.config.js</code> file:</p>\n<p><code>js title=\"docusaurus.config.js\"\nmodule.exports = {\n  themeConfig: {\n    navbar: {\n      items: [\n        // highlight-start\n        {\n          type: 'localeDropdown',\n        },\n        // highlight-end\n      ],\n    },\n  },\n};</code></p>\n<p>The locale dropdown now appears in your navbar:</p>\n<p><img alt=\"Locale Dropdown\" src=\"/img/tutorial/localeDropdown.png\" /></p>\n<h2>Build your localized site</h2>\n<p>Build your site for a specific locale:</p>\n<p><code>bash\nnpm run build -- --locale fr</code></p>\n<p>Or build your site to include all the locales at once:</p>\n<p><code>bash\nnpm run build</code></p>",
    "url": "/docs/tutorial-extras/translate-your-site"
  }
]